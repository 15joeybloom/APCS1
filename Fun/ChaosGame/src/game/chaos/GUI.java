package game.chaos;

import java.awt.Color;
import java.awt.geom.Point2D;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;

/**
 *
 * @author Joey
 */
public class GUI extends javax.swing.JFrame
{

    /**
     * Creates new form GUI
     */
    public GUI()
    {
        initComponents();

        //initialize the component arrays
        checkBoxes = new JCheckBox[10];
        colorBoxes = new JComboBox[10];
        xFields = new JTextField[10];
        yFields = new JTextField[10];

        //fill the component arrays
        for(int i = 0; i < 10; i++)
        {
            checkBoxes[i] = new JCheckBox();

            colorBoxes[i] = new JComboBox();
            colorBoxes[i].setModel(new DefaultComboBoxModel(
                new String[] {
                "Blue", "Green", "Red",
                "Yellow", "Orange", "Magenta",
                "Gray", "Black", "Cyan", "Pink" }));
            colorBoxes[i].setSelectedIndex(i);

            xFields[i] = new JTextField("0");

            yFields[i] = new JTextField("0");
        }

        //create the layout for inputPanel
        GroupLayout layout = new GroupLayout(inputPanel);
        inputPanel.setLayout(layout);
        layout.setAutoCreateGaps(true);

        //horizontal group setup
        ParallelGroup[] ps = new ParallelGroup[4];
        for(int i = 0; i < 4; i++)
        {
            ps[i] = layout.createParallelGroup();
        }
        for(JToggleButton fart : checkBoxes)
        {
            ps[0].addComponent(fart);
        }
        for(JComboBox fart : colorBoxes)
        {
            ps[1].addComponent(fart, GroupLayout.PREFERRED_SIZE,
                                     GroupLayout.DEFAULT_SIZE,
                                     GroupLayout.PREFERRED_SIZE);
        }
        for(JTextField fart : xFields)
        {
            ps[2].addComponent(fart, GroupLayout.PREFERRED_SIZE,
                                     60,
                                     GroupLayout.PREFERRED_SIZE);
        }
        for(JTextField fart : yFields)
        {
            ps[3].addComponent(fart, GroupLayout.PREFERRED_SIZE,
                                     60,
                                     GroupLayout.PREFERRED_SIZE);
        }
        SequentialGroup h = layout.createSequentialGroup();
        for(ParallelGroup fart : ps)
        {
            h.addGroup(fart);
        }
        layout.setHorizontalGroup(h);

        //vertical group setup
        SequentialGroup v = layout.createSequentialGroup();
        for(int i = 0; i < 10; i++)
        {
            v.addGroup(layout.createParallelGroup()
                .addComponent(checkBoxes[i], GroupLayout.PREFERRED_SIZE,
                                             GroupLayout.DEFAULT_SIZE,
                                             GroupLayout.PREFERRED_SIZE)
                .addComponent(colorBoxes[i], GroupLayout.PREFERRED_SIZE,
                                             GroupLayout.DEFAULT_SIZE,
                                             GroupLayout.PREFERRED_SIZE)
                .addComponent(xFields[i], GroupLayout.PREFERRED_SIZE,
                                          GroupLayout.DEFAULT_SIZE,
                                          GroupLayout.PREFERRED_SIZE)
                .addComponent(yFields[i], GroupLayout.PREFERRED_SIZE,
                                          GroupLayout.DEFAULT_SIZE,
                                          GroupLayout.PREFERRED_SIZE));
        }
        layout.setVerticalGroup(v);

        //link the vertical size of the comboboxes and the text fields in each row
        for(int i = 0; i < 10; i++)
        {
            layout.linkSize(SwingConstants.VERTICAL,colorBoxes[i],xFields[i],yFields[i]);
        }

        //Provide initial values to do Sierpinski's triangle
        presetBox.setSelectedIndex(0);
        goButton.doClick();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        gamePanel = new TriangleComponent();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        distanceField = new javax.swing.JTextField();
        inputPanel = new javax.swing.JPanel();
        goButton = new javax.swing.JButton();
        presetBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chaos Game");
        setResizable(false);

        gamePanel.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jLabel2.setText("Distance");

        distanceField.setText("2");

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        goButton.setText("Go!");
        goButton.setToolTipText("Draw the picture!");
        goButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                goButtonActionPerformed(evt);
            }
        });

        presetBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sierpinski Triangle", "Sierpinski Carpet", "Sierpinski Hexagon" }));
        presetBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                presetBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(distanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(presetBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(distanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(goButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(presetBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_goButtonActionPerformed
    {//GEN-HEADEREND:event_goButtonActionPerformed
        TriangleComponent game = (TriangleComponent)gamePanel;
        game.clearVerticies();

        //distance field
        try
        {
            game.setF(1/Double.parseDouble(distanceField.getText()));
        }
        catch(NumberFormatException e){}

        //component arrays
        for(int i = 0; i < 10; i++)
        {
            if(checkBoxes[i].isSelected())
            {
                try
                {
                    String colorString = (String) colorBoxes[i].getSelectedItem();
                    Color c =
                        colorString.equals("Blue") ? Color.blue :
                        colorString.equals("Green") ? Color.green :
                        colorString.equals("Red") ? Color.red :
                        colorString.equals("Yellow") ? Color.yellow :
                        colorString.equals("Orange") ? Color.orange :
                        colorString.equals("Magenta") ? Color.magenta :
                        colorString.equals("Gray") ? Color.gray :
                        colorString.equals("Black") ? Color.black :
                        colorString.equals("Cyan") ? Color.cyan :
                        Color.pink;
                    game.addVertex(
                        new Point2D.Double(
                            Double.parseDouble(xFields[i].getText()),
                            Double.parseDouble(yFields[i].getText())),
                        c);
                }
                catch(NumberFormatException e){}
            }
        }
        game.repaint();
    }//GEN-LAST:event_goButtonActionPerformed

    private void presetBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_presetBoxActionPerformed
    {//GEN-HEADEREND:event_presetBoxActionPerformed
        int selection = presetBox.getSelectedIndex();
        switch(selection)
        {
            case 0:
                distanceField.setText("2");
                for(int i = 0; i < 3; i++)
                {
                    checkBoxes[i].setSelected(true);
                }
                for(int i = 3; i < 10; i++)
                {
                    checkBoxes[i].setSelected(false);
                }
                colorBoxes[0].setSelectedItem("Blue");
                colorBoxes[1].setSelectedItem("Green");
                colorBoxes[2].setSelectedItem("Red");
                xFields[0].setText("0");
                yFields[0].setText("0");
                xFields[1].setText("0");
                yFields[1].setText("500");
                xFields[2].setText("500");
                yFields[2].setText("0");
                goButton.doClick();
                break;
            case 1:
                distanceField.setText("3");
                for(int i = 0; i < 8; i++)
                {
                    checkBoxes[i].setSelected(true);
                }
                for(int i = 8; i < 10; i++)
                {
                    checkBoxes[i].setSelected(false);
                }
                colorBoxes[0].setSelectedItem("Yellow");
                colorBoxes[1].setSelectedItem("Red");
                colorBoxes[2].setSelectedItem("Green");
                colorBoxes[3].setSelectedItem("Blue");
                colorBoxes[4].setSelectedItem("Magenta");
                colorBoxes[5].setSelectedItem("Orange");
                colorBoxes[6].setSelectedItem("Gray");
                colorBoxes[7].setSelectedItem("Black");
                xFields[0].setText("0");
                yFields[0].setText("500");
                xFields[1].setText("0");
                yFields[1].setText("250");
                xFields[2].setText("0");
                yFields[2].setText("0");
                xFields[3].setText("250");
                yFields[3].setText("0");
                xFields[4].setText("250");
                yFields[4].setText("500");
                xFields[5].setText("500");
                yFields[5].setText("500");
                xFields[6].setText("500");
                yFields[6].setText("250");
                xFields[7].setText("500");
                yFields[7].setText("0");
                goButton.doClick();
                break;
            case 2:
                distanceField.setText("3");
                for(int i = 0; i < 6; i++)
                {
                    checkBoxes[i].setSelected(true);
                }
                for(int i = 6; i < 10; i++)
                {
                    checkBoxes[i].setSelected(false);
                }
                colorBoxes[0].setSelectedItem("Yellow");
                colorBoxes[1].setSelectedItem("Red");
                colorBoxes[2].setSelectedItem("Green");
                colorBoxes[3].setSelectedItem("Blue");
                colorBoxes[4].setSelectedItem("Magenta");
                colorBoxes[5].setSelectedItem("Orange");
                xFields[0].setText("0");
                yFields[0].setText("195");
                xFields[1].setText("112.5");
                yFields[1].setText("390");
                xFields[2].setText("337.5");
                yFields[2].setText("390");
                xFields[3].setText("450");
                yFields[3].setText("195");
                xFields[4].setText("337.5");
                yFields[4].setText("0");
                xFields[5].setText("112.5");
                yFields[5].setText("0");
                goButton.doClick();
                break;
        }
    }//GEN-LAST:event_presetBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for(javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch(ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch(InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch(IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch(javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new GUI().setVisible(true);
            }
        });
    }
    private JCheckBox[] checkBoxes;
    private JComboBox[] colorBoxes;
    private JTextField[] xFields;
    private JTextField[] yFields;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField distanceField;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton goButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JComboBox presetBox;
    // End of variables declaration//GEN-END:variables
}
